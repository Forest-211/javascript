/**
 * 规范：
 *  1、块级作用域
 *      - let取代var；let没有副作用且予以相同
 *      - 全局常量和线程安全；let和const之间；建议优先使用const，尤其是在全局环境下，其目的：
 *          - 提醒阅读程序的人，这个变量不应该改变
 *          - const比较符合函数变成思想，运算不改变值，只是新建值，而且这样也利于将来的分布式运算
 *          - JavaScript编译器回怼const进行优化，多使用const，有利于提高程序的运行效率
 *  2、静态字符串一律使用单引号或反引号，动态字符串使用反引号
 *  3、使用数组成员对变量赋值时，优先使用结构赋值
 *  4、单行定义的对象，最后一个成员不以逗号结尾。多行定义的对象，最后一个成员以逗号结尾。
 *  5、使用扩展运算符(...)拷贝数组，使用Array.from方法将类似数组的对象转为数组
 *  6、立即执行函数可以写成箭头函数的形式
 *  7、Map结构；注意区分 Object 和 Map，只有模拟现实世界的实体对象时，才使用 Object。如果只是需要key: value的数据结构，使用 Map 结构。因为 Map 有内建的遍历机制。
 *  8、Class取代prototype的操作；因为class的写法更简洁、更易于理解
 *  9、Module语法是JavaScript模块的标准写法，坚持这种写法，使用import取代require
 *  10、ESLint的使用，ESLint 是一个语法规则和代码风格的检查工具，可以用来保证写出语法正确、风格统一的代码
 *
 */

{
    // IIFE
    (()=>{
        console.log('welcome to the internet.')
    })()
}
